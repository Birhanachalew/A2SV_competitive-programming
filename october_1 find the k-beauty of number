class Solution:
    def divisorSubstrings(self, num: int, k: int) -> int:
         
        res=i=0
        nums=str(num)
        for j in range(k,len(nums)+1):
            val="".join(nums[i:j])
            if int(val)>0 and num%(int(val))==0:
                res+=1
            i+=1
        return res
            
        """
        left=0
        right=0
        count=0
        num=str(num)
        while right<=(len(num)):
            n=int(num[left:right])
            if not n:
                left+=1
                right+=1
                continue
            if int(num)%n==0:
                count+=1
            left+=1
            right+=1
        return count
                
            
       
    """
    
    
    
    """
        i=0
        count=0
        nums=str(num)
        for j in range(1,len(nums)+1):
            div="".join(nums[i:j])
            
            if int(div)>0 and num%(int(div))==0:
                count+=1
            i+=1
        return count
            """
    

        
