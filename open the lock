class Solution:
    def openLock(self, deadends: List[str], target: str) -> int:
        if "0000" in deadends:
            return -1
        seen = set(deadends)

        def children(lock):
            res = []
            for i in range(4):
                digit = int(lock[i:i+1]) # 0
                res.append(lock[:i] + str((digit + 1) % 10) + lock[i+1:]) # '' + 1 + '000'
                res.append(lock[:i] + str((digit - 1 + 10) % 10) + lock[i+1:])
            return res

        q = deque()

        q.append(("0000", 0))

        while q:
            lock, turns = q.popleft()
            if lock == target:
                return turns
            for child in children(lock):
                if child not in seen:
                    q.append((child, turns+1))
                    seen.add(child)
            
        return -1
